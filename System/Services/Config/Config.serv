local function getTable(path)
    if fs.exists(path) then
        local file = io.open(path, "r")
        local lines = {}
        local i = 1
        local line = file:read("*l")
        while line ~= nil do
            lines[i] = line
            line = file:read("*l")
            i = i + 1
        end
        file:close()
        return lines
    end
    return {}
end
if fs.exists("/System/Configs/.Rito.conf") then
    System.logInfo("Config Service","Started")
    RitoOS_Config_service_started = true
else
    System.logAlert("Config Service","Could not Start config service")
    System.logAlert("Config Service","No config file")
    System.logAlert("Sending reboot command")
    sleep(5)
    RitoOSEnter_Recovery = true
    os.reboot()
end
while true do -- Load configs
    if fs.exists("/System/Configs/.Rito.conf") then
        RitoOS_Config =  getTable("/System/Configs/.Rito.conf")
        RitoOS_Crash_Action = string.sub(RitoOS_Config[3],string.find(RitoOS_Config[3],":")+2)
        RitoOS_Name = string.sub(RitoOS_Config[6],string.find(RitoOS_Config[6],":")+2)
        RitLock_Enabled = string.sub(RitoOS_Config[9],string.find(RitoOS_Config[9],":")+2)
        Monitor_Service_New_Connection_Action = tonumber(string.sub(RitoOS_Config[13],string.find(RitoOS_Config[13],":")+2))
        Monitor_Service_Monitor_Scale = tonumber(string.sub(RitoOS_Config[14],string.find(RitoOS_Config[14],":")+2))
        Update_buildType = string.sub(RitoOS_Config[21],string.find(RitoOS_Config[21],":")+2)
        Update_site = string.sub(RitoOS_Config[22],string.find(RitoOS_Config[22],":")+2)
        CodeX_Text_Color = tonumber(string.sub(RitoOS_Config[26],string.find(RitoOS_Config[26],":")+2))
        CodeX_Background_Color = tonumber(string.sub(RitoOS_Config[27],string.find(RitoOS_Config[27],":")+2))
        CodeX_Prompt_Color = tonumber(string.sub(RitoOS_Config[28],string.find(RitoOS_Config[28],":")+2))
        CodeX_Input_Color = tonumber(string.sub(RitoOS_Config[29],string.find(RitoOS_Config[29],":")+2))
        CodeX_Error_Color = tonumber(string.sub(RitoOS_Config[30],string.find(RitoOS_Config[30],":")+2))
        CodeX_Register_Key_Length = tonumber(string.sub(RitoOS_Config[31],string.find(RitoOS_Config[31],":")+2))
    else
        System.logAlert("Config service","Config file not found")
        sleep(5)
        RitoOSEnter_Recovery = true
        os.reboot()
    end
    sleep(1)
end
--[[ 

     _________________________________________________________________________
    |                                                                         |
    |                      RitoOS - ALPHA BUILD -  ^.^                        |
    |                                                                         |
    | - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - |
    |                                                                         |
    |                      Recovery Version Alpha 2.0                         |
    |                                                                         |
    |  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  |
    |                                                                         |
    |   Thank you for looking at RitoOS, (or downloading it), it means alot.  |
    |    If you would like to learn more, head on over to the Github page:    |
    |              https://www.github.com/Watsuprico/RitoOS/                  |
    |                                                                         |
    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -|
   _|                                                                         |
  |             Some extended info on copying and using RitoOS                |______________________________________________________ 
  |                                                                                                                                 |
  | Permission is hereby granted, free of charge, to any person obtaining a copy of this software and                               |
  | associated documentation files (the "Software"), to deal in the Software without restriction,                                   |
  | including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,                           |
  | copies of the Software, and to permit persons to whom the Software is furnished to do so,                                       |
  | subject to the following conditions:                                                                                            |
  |                                                                                                                                 |
  | -The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. |
  | -Visible credit is given to the original author.                                                                                |
  | -The software is distributed in a non-profit way.                                                                               |
  |                                                                                                                                 |
  | THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE            |
  | WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR           |
  | COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,     |
  | ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                           |
  |                                                                                                                                 |
  |_________________________________________________________________________________________________________________________________|


]]

local function getSavedPass(getKey, username) -- I'm take this from CodeX if you don't mind
  if not username then
    username = CodeX_Username
  end
  local Key = StrUtils.SHA1(getKey)
  local getKey = "Nope.avi"
  local Passphrase_File = fs.open("/Users/"..username.."/.Passphrase.CodeX","r")
  local Passphrase_Key = Passphrase_File.readAll()
  Passphrase_File.close()
  local UnsavedPassword = StrUtils.SHA1(Key..""..Passphrase_Key)
  local Passphrase_Key = "Nope.avi"
  local Passphrase_File = "Nope.avi"
  return UnsavedPassword
end
local function getTable(path)
  if fs.exists(path) then
    local file = io.open(path, "r")
    local lines = {}
    local i = 1
    local line = file:read("*l")
    while line ~= nil do
      lines[i] = line
      line = file:read("*l")
      i = i + 1
    end
    file:close()
    return lines
  end
  return {}
end
local function append(path, text)
  local file = assert(io.open(path, "a"))
  file:write(text.."\n")
  file:close()
end

function Login() -- Login before messing with the system
  System.logInfo("Recovery","Loading StrUtils for login script.")
  os.loadAPI("/System/APIs/StrUtils/StrUtils")
  term.setBackgroundColor(colors.white)
  term.clear()
  term.setTextColor(colors.white)
  term.clear()
  term.setCursorPos(1,1)
  term.setBackgroundColor(colors.cyan)
  term.clearLine()
  PrintCentered("RitoOS Recovery")
  term.setBackgroundColor(colors.white)
  term.setTextColor(colors.black)
  print("Please log in.")
  print()
  print("Username -")
  term.setCursorPos(11,4)
  local username = read()
  if fs.exists("/Users/"..username.."/."..username..".CodeX") then
    System.logInfo("Recovery","Awaiting for the password to user ' "..username.." ' .")
    print("Password -")
    term.setCursorPos(11,5)
    local wizardpass = read("*")
    local morewizards = getSavedPass(wizardpass, username)
    local userfile =  getTable("/Users/"..username.."/."..username..".CodeX")
    local lesswizards = string.sub(userfile[1],string.find(userfile[1],"!")+1)
    if morewizards == lesswizards then
      print("Loading ...")
      System.logInfo("Recovery","Password recieved and correct.")
      loggedIn = true
    else
      print('Password incorrect ):')
      System.logInfo("Recovery","incorrect password used for user ' "..username.. " ' .")
      sleep(2)
    end
  else
    print('No such user.')
    sleep(2)
  end
end


function PrintCentered(sText)
    local w, h = term.getSize()
    local x, y = term.getCursorPos()
    x = math.max(math.floor((w / 2) - (#sText / 2)), 0)
    term.setCursorPos(x, y)
    print(sText)
end

function CUI(m, head)
  n=1
  l=#m
  while true do
    term.setBackgroundColor(colors.blue)
    term.setTextColor(colors.white)
    term.clear()
    term.setCursorPos(1,1)
    term.setBackgroundColor(colors.cyan)
    term.clearLine()
    PrintCentered(head)
    term.setBackgroundColor(colors.blue)
    print("Please select an option. [arrow up/down]")
    print()
    for i=1, l, 1 do
      if i==n then print(" "..m[i].." - ]\n") else print(" ", m[i], "\n") end
    end
    print()
    a, b= os.pullEventRaw()
    if a == "key" then
      if b==200 and n>1 then n=n-1 end
      if b==208 and n<=l then n=n+1 end
      if b==28 then break end
    end
  end
  term.clear() term.setCursorPos(1,1)
  return n
end


local function Recovery()
  local options={
    "[1] Boot RitoOS",
    "[2] Troubleshoot",
    "[3] Shutdown"
  }
  local n=CUI(options,"RitoOS Recovery")
  if n then
    if n == 1 then
      System.logInfo("Recovery","Booting into RitoOS")
      if fs.exists("/System/.Boot/BN") then
        fs.delete("/System/.Boot/BN")
      end
      RitoOS_bootIntoRecovery = false
      os.reboot()
    elseif n == 2 then


        while not loggedIn do
          Login()
        end

        local options={
          "[1] Back",
          "[2] Refresh RitoOS - Reinstall RitoOS and keep your files",
          "[3] Reset RitoOS - Remove all files and reinstall RitoOS",
          "[4] Advance - More options"
        }
        local n=CUI(options,"Troubleshoot")
        
        if n then
          if n == 1 then
            Recovery()
          elseif n == 2 then
            System.logInfo("Recovery","Running the refresh tool")
            shell.run("/System/.Recovery/.Refresh")
            Recovery()
          elseif n == 3 then
            System.logInfo("Recovery","Running the RitoOS reset tool")
            shell.run("/System/.Recovery/.Reset")
            Recovery()
          elseif n == 4 then

            local options={
              "[1] Back",
              "[2] System Restore - Restore RitoOS from a restore point on a disk",
              "[3] Update Manager - Install or remove update(s)",
              "[4] Command Prompt - Use the command prompt",
              "[5] Automatic Repair - Have RitoOS fix it's self",
              "[6] Wipe The Computer - Remove everything"
            }
            local n=CUI(options,"Advance Troubleshooting")
              if n then
                if n == 1 then
                  Recovery()
                elseif n == 2 then
                  System.logInfo("Recovery","Running the restore tool")
                  shell.run("/System/.Recovery/.Restore")
                  Recovery()
                elseif n == 3 then
                  System.logInfo("Recovery","Running UpdateMan")
                  shell.run("/System/.Recovery/.UpdateMan")
                  Recovery()
                elseif n == 4 then
                  System.logInfo("Recovery","Opening a command prompt")
                  shell.run("/System/CMD.rxf")
                  sleep(1)
                  Recovery()
                elseif n == 5 then
                  System.logInfo("Recovery","Running the AutomaticRepair tool")
                  shell.run("/System/.Recovery/.AutomaticRepair")
                  Recovery()
                elseif n == 6 then
                  System.logWarn("Recovery","'Wipe Data' selected!")
                  term.setBackgroundColor(colors.white)
                  term.setTextColor(colors.red)
                  term.clear()
                  term.setCursorPos(1,1)
                  l = 10
                  local c = "" -- Start string
                  for i = 1, l do
                    c = c .. string.char(math.random(33, 126))
                  end
                  print()
                  term.setTextColor(colors.red)
                  print("- This will delete ALL data on this computer -")
                  print("- Please type the 10 character code below to comfirm -")
                  print(c)
                  print()
                  local cc = read()
                  if cc == c then
                    System.logAlert("Recovery","The system has been wiped. User entered the confirmation code correctly.")
                    print("/- Good bye -/")
                    for _,file in ipairs(fs.list("/")) do
                      if not fs.isReadOnly(file) then if file ~= "/System/Latest.log" then if file ~= "/System/Logs/RitoOS.log" then
                        fs.delete(file)
                        print("Deleting "..file)
                      end end end
                    end
                    print("/- System deleted -/")
                    sleep(5)
                    Recovery()
                  else
                    System.logInfo("Recovery","Confirmation code failed to match, not wiping data.")
                    print("- Code did not match -")
                    print("- Returning -")
                    sleep(3)
                    Recovery()
                  end
                elseif n == 7 then
                  Recovery()
                end
              end

          elseif n == 5 then
            Recovery()
          end
        end

    elseif n == 3 then
      System.logInfo("Recovery","System shutting down.")
      RitoOS_bootIntoRecovery = true
      os.shutdown()
    elseif n == 4 then
      Recovery()
    end
  end
end

System.logInfo("Recovery","Loaded.")
Recovery()
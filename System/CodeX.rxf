local function PrintCentered(sText)
msgLen = string.len(sText)
screenWidth,_ = term.getSize()
_xCoords = tonumber(math.ceil((screenWidth / 2) - (msgLen / 2)))
_,termY = term.getCursorPos()
term.setCursorPos(_xCoords,termY)
print(sText)
end
local function fwrite(path, text)
        local file = assert(io.open(path, "w"))
        file:write(text)
        file:close()
end
local function stc(c) --Help save space...
	term.setTextColor(c)
end
local function c()
	term.clear()
end
local function sbc(c)
	term.setBackgroundColor(c)
end
local function scp(x,y)
	term.setCursorPos(x,y)
end
print("Checking... is there a user?")
if shell.run("/Users/.CodeXUserCreated.rxf") == false then
	print("Register. . .")
    os.loadAPI("/APIs/StrUtils/StrUtils ")
    scp(1,1)
    c()
    stc(colors.black)
    PrintCentered("Welcome to CodeX! The login system of RitoOS.")
    PrintCentered("It seems there is no account setup, lets fix that.")
    PrintCentered("Please, type your name.")
    PrintCentered("(This is not the name you enter when logging in!)")
    PrintCentered("E.X. Bobby Swano ")
    local Username = read()
    PrintCentered("Please type a login name.")
    PrintCentered("(This is the username of the user,")
    PrintCentered(" and is how you login)")
    PrintCentered("E.X. Watsuprico")
    local Logname = read()
    print()
    local function RegisterPassword()
        local function fwrite(path, text)
            local file = assert(io.open(path, "w"))
            file:write(text)
            file:close()
        end
        c()
        scp(1,1)
        PrintCentered("Now, type your password.")
        local Passcode = read("*")
        PrintCentered("Please, re-type that password.")
        local CheckCode = read("#")
        if CheckCode == Passcode then
            PrintCentered("Passwords match!")
            PrintCentered("Saving your profile . . .")
            local Key = StrUtils.SHA1("."..CheckCode.."") -- Look mom! I can encrypt!
            local Password = StrUtils.SHA1(""..CheckCode..""..Key..""..CheckCode.."")
            local Passcode = StrUtils.SHA1(""..Password..""..Key..""..Password.."") -- Many ways...
            local CheckCode = StrUtils.toBinary(""..Passcode.."")
            fwrite("/Users/"..Logname.."/."..Logname..".codex", "Username = '"..Username.."' pass = '"..CheckCode.."' ver = '"..CodeXVer.."'")
            fwrite("/Users/.CodeXUserCreated.rxf","return true")
            PrintCentered("Complete!")
            sleep(1)
        else
            PrintCentered("Passwords do not match!")
            sleep(2)
            RegisterPassword()
        end --End check password

    end -- Close Pass function.
    RegisterPassword()
    print("Rebooting...")
    os.reboot()
else
print("There is...")
print("Starting...")
sbc(CodeXBGC)
c()
stc(CodeXTC)
scp(1,1)
PrintCentered("CodeX Version "..CodeXVer)
print()
scp(1,4)
stc(CodeXPC)
print("Username: ")
scp(11,4)
stc(CodeXIC)
local username = read()
if fs.exists("/Users/"..username.."/."..username..".codex") == true then
	LogName = username
    shell.run("/Users/"..username.."/."..username..".codex")
else
	stc(CodeXEC)
	print("Unknown user.")
	sleep(1)
	start()
end
stc(CodeXPC)
scp(1,5)
print("Password: ")
scp(11,5)
stc(CodeXIC)
local MultiKey = read("*")
local Key = StrUtils.SHA1("."..MultiKey.."") -- Look mom! I can encrypt!
local Password = StrUtils.SHA1(""..MultiKey..""..Key..""..MultiKey.."")
local Passcode = StrUtils.SHA1(""..Password..""..Key..""..Password.."") -- Many ways...
local CheckCode = StrUtils.toBinary(""..Passcode.."")
local MultiKey = "Om nom nom."
local Key = "Om nom nom."
local Password = "Om nom nom."
local Passcode = "Om nom nom."
if pass == CheckCode then
	print("Password correct! Loading . . .")
    HasUserLogged = "tajbn38wsna;3on4r00djsd0hj3n"
    c()
    shell.run("/System/Explorera.rxf")
else
	stc(CodeXEC)
	print("Password incorrect!")
	sleep(1)
	start()
end
sleep(1)
start()
end -- End function
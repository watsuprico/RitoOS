--[[
Manual install:
Github{ https://github.com/watsuprico/RitoOS/ }
NSH{ http://pastebin.com/X5Fysdi4 -- Net Shell | Location: /Programs/nsh }-- Not Needed!
Dirs {
[-APIs
 |-Bedrock
 |-ProgressBar
 |-Rito
 |-StrUtils
[-Configs
[-Programs
[-System
 |-.Boot
 |-.Kernel
 |-.Recovery
 |-RitLock
[-Users
}
]]--
local logo = {
  "96d 1 9 d 1 9 d7189 d 1 9 d 1 95d41 9 d 1 9  ",
  " 96d 1 9 d 1 97d 189 d 1 9 d 159 d41 9 d 1 9 ",
  "9 d61 9 d 1 97d 1 98d 1 9 d 159 d 149 d 1 9  ",
  " 9 d61 9 d 179 d 1 98d 1 9 d51 9 d 149 d 1 93",
  "  9 d61 9 d71 9 d 1 98d 1 95d 1 9 d 149 d 139",
  " 9 d 169 d71 9 d 1 9 d81 95d 1 9 d 1 94d 139 ",
  "  9 d 1697d 1 9 d 1 9 d8159 d 1 9 d 1 94d31 9",
}
-- Functions
local function PrintCentered(m)
local _mL = string.len(m)
local _scw,_ = term.getSize()
local _xC = tonumber(math.ceil((_scw / 2) - (_mL / 2)))
local _,tY = term.getCursorPos()
term.setCursorPos(_xC,tY)
print(m)
end -- End function
function updateGit(file,spath)
        if spath == nil then
                spath = file
        end
        if __RitoOSInstaller__Enable_Betas == true then
                branch = "BetaUpdates"
        else
                branch = "master"
        end
        if http then
                local h=http.get("https://raw.githubusercontent.com/watsuprico/RitoOS/"..branch..""..file)
                if h then
                        local f=fs.open(spath,'w')
                        f.write(h.readAll())
                        f.close()
                        h.close()
                        return true
                else
                        printError("/- Could not download "..file.." on "..branch.." , is your internet working? -/")
                end
        else
                        printError("/- Http not enabled! Please enable http -/")
                        sleep(1)
                        return false
        end
end
function downloadPaste(code,path)
        if http then
                local h=http.get('http://pastebin.com/raw.php?i='..code)
                if h then
                        local f=fs.open(path,'w')
                        f.write(h.readAll())
                        f.close()
                        h.close()
                        return true
                else
                        printError("/- Could not download "..code..", is your internet working? -/")
                end
        else
                        printError("/- Http not enabled! Please enable http -/")
                        sleep(1)
                        return false
        end
end
term.setBackgroundColor(colors.lightGray)
term.clear()
PrintCentered("/- RitoOS -/")
PrintCentered("/- loading -/")
PrintCentered("/- Downloading ProgressBar API -/")
if fs.isDir("/.__temp/") == true then
        fs.delete("/.__temp/")
        fs.makeDir("/.__temp/")
else
        fs.makeDir("/.__temp/")
end
downloadPaste("zeG34tu6","/.__temp/bar")
os.loadAPI("/.__temp/bar")
local function install()
local pbar = bar.init( bar.LOGO_IS_OVERLAY, logo, 24, nil, 14, nil, "Installing Rito OS", "- Rito OS -", "Rito OS" )
local function ProgressBarB()
    pbar:run( true )
end
local function install2()
        sleep(2)
        pbar:triggerUpdate(" . - Creating dirs and deleting old files - .")
                if fs.isDir("/Old/") == true then
                        fs.delete("/Old/")
                        fs.makeDir("/Old/")
                else
                        fs.makeDir("/Old/")
                end
                pbar:triggerUpdate(". - |Checking System| - .")
                if fs.isDir("/System/") == true then
                        fs.move("/System/","/Old/System/")
                        fs.makeDir("/System/")
                else
                        fs.makeDir("/System/")
                end
                pbar:triggerUpdate(". - |Checking APIs| - .")
                if fs.isDir("/APIs/") == true then
                        fs.move("/APIs/","/Old/APIs/")
                        fs.makeDir("/APIs/")
                else
                        fs.makeDir("/APIs/")
                end
                pbar:triggerUpdate(". - |Checking Configs| - .")
                if fs.isDir("/Configs/") == true then
                        fs.move("/Configs/","/Old/Configs/")
                        fs.makeDir("/Configs/")
                else
                        fs.makeDir("/Configs/")
                end
                pbar:triggerUpdate(". - |Checking Programs| - .")
                if fs.isDir("/Programs/") == true then
                        fs.move("/Programs/","/Old/Programs")
                        fs.makeDir("/Programs/")
                else
                        fs.makeDir("/Programs/")
                end
                pbar:triggerUpdate(". - |Checking Users| - .")
                if fs.isDir("/Users/") == true then
                        fs.move("/Users/","/Old/Users/")
                        fs.makeDir("/Users/")
                else
                        fs.makeDir("/Users/")
                end
        pbar:triggerUpdate("/- Starting download(s) -/")
        sleep(0)
        pbar:triggerUpdate("/- Downloading 'System' -/")
        pbar:triggerUpdate("/- Downloading boot -/")
        updateGit("/System/.Boot/Boot")
        pbar:triggerUpdate("/- Downloading recovery -/")
        updateGit("/System/.Recovery/.Recover")
        pbar:triggerUpdate("/- Downloading RitRun -/")
        updateGit("/System/.RitRun/RitRun")
        pbar:triggerUpdate("/- Downloading CodeX -/")
        updateGit("/System/CodeX.rxf")
        pbar:triggerUpdate("/- Downloading Explorera -/")
        updateGit("/System/Explorera.rxf")
        pbar:triggerUpdate("/- Downloading User -/")
        updateGit("/System/User.rxf")
        pbar:triggerUpdate("/- Downloading 'APIs' -/")
        pbar:triggerUpdate("/- Downloading ProgressBar -/")
        updateGit("/APIs/ProgressBar/bar")
        pbar:triggerUpdate("/- Downloading Bedrock -/")
        updateGit("/APIs/Bedrock/Bedrock")
        pbar:triggerUpdate("/- Downloading StrUtils -/")
        updateGit("/APIs/StrUtils/StrUtils")
        pbar:triggerUpdate("/- Downloading 'Configs' -/")
        pbar:triggerUpdate("/- Downloading default config -/")
        updateGit("/Configs/.Rito.conf")
        pbar:triggerUpdate("/- Downloading 'Programs' -/")
        pbar:triggerUpdate("/- Downloading NSH -/")
        downloadPaste("X5Fysdi4","/Programs/NSH")
        pbar:triggerUpdate("/- Writing startup script -/")
        local file = assert(io.open("/Startup", "w"))
        file:write("shell.run('/System/.Boot/Boot')")
        file:close()
        pbar:triggerUpdate("|-/- Rebooting -/-|")
        sleep(3)
    end
parallel.waitForAny(ProgressBarB,install2)
    term.setTextColor(colors.black)
    term.setBackgroundColor(colors.lightGray)
    term.setCursorPos(1,1)
    term.clear()
    PrintCentered(". - Deleting temp - .")
    if fs.isDir("/.__temp/") == true then
        fs.delete("/.__temp/")
    end
    PrintCentered(". -- | RitoOS has been installed | -- .")
    PrintCentered(". -- | System rebooting | -- .")
    sleep(3)
    PrintCentered(". -| Goodbye  ); |- .")
    sleep(0)
    os.reboot()
end -- End install
install()